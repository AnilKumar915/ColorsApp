name: testrelease

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+-beta" # eg. 1.2.5-beta

# on:
#   push:
#     branches: ["main"]

permissions:
  contents: write
  statuses: read
  actions: read

env:
  EV_BUILD_START_NUMBER: 0
  STATIC_VERSION: 1.0.10-beta

jobs:
  build:
    name: Build & Create release on Play Store & App Store
    needs: [version]
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v1

      - name: Fetch all history for all tags and branches
        run: |
          git config remote.origin.url https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
          git fetch --prune --depth=10000

      - name: "Extract version, build number and type"
        run: |
          echo "EV_BUILD_VERSION=$(echo $STATIC_VERSION | sed 's/-.*//')" >> $GITHUB_ENV
          echo "EV_BUILD_NUMBER=$(echo $(expr $EV_BUILD_START_NUMBER + ${{ github.run_number }}))" >> $GITHUB_ENV
          echo "EV_BUILD_TYPE=$(echo $STATIC_VERSION | sed 's/.*-//')" >> $GITHUB_ENV

      - name: "Setup Flutter"
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.7.3"
          cache: true

      - name: "Download Android keystore (Beta)"
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.ES_ANDROID_KEYSTORE_BASE64 }}

      - name: Update KeyStore password in gradle properties
        run: sed -i 's/#{KEYSTORE_PASS}#/${{ secrets.KEYSTORE_PASS }}/g' android/key.properties
      - name: Update KeyStore key password in gradle properties
        run: sed -i 's/#{KEYSTORE_KEY_PASS}#/${{ secrets.KEYSTORE_KEY_PASS }}/g' android/key.properties
      - name: Keystore alias
        run: sed -i 's/#{KEYSTORE_KEY_ALIAS}#/${{ secrets.KEYSTORE_KEY_ALIAS }}/g' android/key.properties

      - name: "Setup java for Android"
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
          cache: "gradle"

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.3.2"
          cache: true
      - run: flutter clean
      - run: flutter pub get
      # - run: flutter test
      - run: flutter build apk --release --split-per-abi
      - run: flutter build appbundle

      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
          token: ${{ secrets.GH_TOKEN }}
          # tag:  '1.0.20' #${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}

      - name: Upload app bundle
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Get appbundle from artifacts
        uses: actions/download-artifact@v2
        with:
          name: appbundle

      - name: Release app to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.colors.cicdsample
          releaseFiles: app-release.aab
          track: internal
          status: completed

      - name: "Setup codemagic cli tools"
        run: |
          pip3 install codemagic-cli-tools

      - name: "Download AppStore API private key"
        id: apptstore_private_key
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: appstore_private.key
          encodedString: ${{ secrets.APPSTORE_PRIVATE_API_KEY }}

      - name: "Download AppStore P12 Certificate"
        id: apptstore_p12_cert
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: appstore_cert.p12
          encodedString: ${{ secrets.APPSTORE_P12_FILE }}

      - name: "Extract AppStore P12 Certificate Key"
        run: |
          openssl pkcs12 -in ${{ steps.apptstore_p12_cert.outputs.filePath }} -nodes -nocerts -passin pass:${{ secrets.ES_APPSTORE_SIGNING_CERT_P12_PASSWORD }} | openssl rsa -out $HOME/appstore_signing_cert.key

      - name: "Setup AppStore dependencies"
        run: |
          keychain initialize
          app-store-connect fetch-signing-files \
            --issuer-id=${{ secrets.ES_APPSTORE_ISSUER_ID }} \
            --key-id=${{ secrets.ES_APPSTORE_KEY_ID }} \
            --private-key=@file:${{ steps.apptstore_private_key.outputs.filePath }} \
            --certificate-key=@file:$HOME/appstore_signing_cert.key \
            --strict-match-identifier \
            --platform=IOS \
            --type=IOS_APP_STORE \
            --create \
            $(xcode-project detect-bundle-id)
          keychain add-certificates
          xcode-project use-profiles

      - name: "Build iOS release"
        run: |
          pod repo update
          find . -name "Podfile" -execdir pod install \;
          echo ${{ env.EV_BUILD_VERSION }}
          echo ${{ env.EV_BUILD_NUMBER }}
          echo ${{ env.EV_BUILD_TYPE }}
          flutter build ipa --release --build-name=${{ env.EV_BUILD_VERSION }} --build-number=${{ env.EV_BUILD_NUMBER }} --export-options-plist=$HOME/export_options.plist

      - name: "Upload to TestFlight"
        run: |
          app-store-connect publish \
            --issuer-id=${{ secrets.ES_APPSTORE_ISSUER_ID }} \
            --key-id=${{ secrets.ES_APPSTORE_KEY_ID }} \
            --private-key=@file:${{ steps.apptstore_private_key.outputs.filePath }} \
            --path /Users/runner/work/ColorsApp/ColorsApp/build/ios/ipa/*.ipa
